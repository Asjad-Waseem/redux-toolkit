{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport data from '../data/data.json';\nexport const cartItemsSlice = createSlice({\n  name: 'items',\n  initialState: {\n    blockItems: data,\n    updateBlockText: \"\"\n  },\n  reducers: {\n    updateBlockText: (state, action) => {// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      //   state.blockItems = 1\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  updateBlockText\n} = blockItemsSlice.actions;\nexport default blockItemsSlice.reducer;","map":{"version":3,"sources":["C:/Users/wel/redux-toolkit-blocks/redux-toolkit-blocks/src/redux/blockItems.js"],"names":["createSlice","data","cartItemsSlice","name","initialState","blockItems","updateBlockText","reducers","state","action","blockItemsSlice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACxCG,EAAAA,IAAI,EAAE,OADkC;AAExCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAEJ,IADA;AAEZK,IAAAA,eAAe,EAAE;AAFL,GAF0B;AAMxCC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,eAAe,EAAE,CAACE,KAAD,EAAQC,MAAR,KAAmB,CAClC;AACA;AACA;AACA;AACF;AACC;AAPO;AAN8B,CAAD,CAAlC,C,CAkBP;;AACA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAsBI,eAAe,CAACC,OAA5C;AAEP,eAAeD,eAAe,CAACE,OAA/B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport data from '../data/data.json';\r\n\r\nexport const cartItemsSlice = createSlice({\r\n  name: 'items',\r\n  initialState: {\r\n    blockItems: data,\r\n    updateBlockText: \"\",\r\n  },\r\n  reducers: {\r\n    updateBlockText: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n    //   state.blockItems = 1\r\n    },\r\n\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { updateBlockText } = blockItemsSlice.actions\r\n\r\nexport default blockItemsSlice.reducer"]},"metadata":{},"sourceType":"module"}